<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="jquery.api.xsl"?>
<api>
  <categories>
    <category name="Ajax">
      <category name="Global Ajax Event Handlers"/>
      <category name="Helper Functions"/>
      <category name="Low-Level Interface"/>
      <category name="Shorthand Methods"/>
    </category>
    <category name="Attributes"/>
    <category name="Core"/>
    <category name="CSS"/>
    <category name="Data"/>
    <category name="Dimensions"/>
    <category name="Effects">
      <category name="Basics"/>
      <category name="Custom"/>
      <category name="Fading"/>
      <category name="Sliding"/>
    </category>
    <category name="Events">
      <category name="Browser Events"/>
      <category name="Document Loading"/>
      <category name="Event Handler Attachment"/>
      <category name="Event Object"/>
      <category name="Form Events"/>
      <category name="Keyboard Events"/>
      <category name="Mouse Events"/>
    </category>
    <category name="Forms"/>
    <category name="Manipulation">
      <category name="Class Attribute"/>
      <category name="Copying"/>
      <category name="DOM Insertion"/>
      <category name="DOM Insertion, Around"/>
      <category name="DOM Insertion, Inside"/>
      <category name="DOM Insertion, Outside"/>
      <category name="DOM Removal"/>
      <category name="DOM Replacement"/>
      <category name="General Attributes"/>
      <category name="Style Properties"/>
    </category>
    <category name="Miscellaneous">
      <category name="Collection Manipulation"/>
      <category name="Data Storage"/>
      <category name="DOM Element Methods"/>
      <category name="Setup Methods"/>
    </category>
    <category name="Offset"/>
    <category name="Plugin Authoring"/>
    <category name="Properties">
      <category name="Properties of jQuery Object Instances "/>
      <category name="Properties of the Global jQuery Object"/>
    </category>
    <category name="Selectors">
      <category name="Attribute"/>
      <category name="Basic"/>
      <category name="Basic Filter"/>
      <category name="Child Filter"/>
      <category name="Content Filter"/>
      <category name="Form"/>
      <category name="Hierarchy"/>
      <category name="Visibility Filter"/>
    </category>
    <category name="Traversing">
      <category name="Filtering"/>
      <category name="Miscellaneous Traversing"/>
      <category name="Tree Traversal"/>
    </category>
    <category name="Utilities"/>
    <category name="Version">
      <category name="Version 1.0"/>
      <category name="Version 1.0.4"/>
      <category name="Version 1.1"/>
      <category name="Version 1.1.2"/>
      <category name="Version 1.1.3"/>
      <category name="Version 1.1.4"/>
      <category name="Version 1.2"/>
      <category name="Version 1.2.3"/>
      <category name="Version 1.2.6"/>
      <category name="Version 1.3"/>
      <category name="Version 1.4"/>
      <category name="Version 1.4.1"/>
      <category name="Version 1.4.2"/>
      <category name="Version 1.4.3"/>
      <category name="Version 1.4.4"/>
    </category>
  </categories>
    <entries>
<entry type='method' name="jQuery.trim" return="String">
  <signature>
    <added>1.4.3</added>
    <argument name="duration" type="String,Number" optional="true">
      <desc>A string or number determining how long the animation will run.</desc>
    </argument>
    <argument name="easing" type="String" optional="true">
      <desc>A string indicating which easing function to use for the transition.</desc>
    </argument>
    <argument name="callback" type="Callback" optional="true">
      <desc>A function to call once the animation is complete.</desc>
    </argument>
  </signature>
  <signature>
    <added>1.0</added>
    <argument name="str" type="String">
      <desc>The string to trim.</desc>
    </argument>
  </signature>
  <desc>Remove the whitespace from the beginning and end of a string.</desc>
  <longdesc>
    <p>The <code>$.trim()</code> function removes all newlines, spaces (including non-breaking spaces), and tabs from the beginning and end of the supplied string. If these whitespace characters occur in the middle of the string, they are preserved.</p>
  </longdesc>
  
  <example>
      <desc>Remove the two white spaces at the start and at the end of the string.</desc>
      <code><![CDATA[

$("button").click(function () {
var str = "     lots of spaces before and after     ";
alert("'" + str + "'");

str = jQuery.trim(str);
alert("'" + str + "' - no longer");
});

]]></code>
      <html><![CDATA[<button>Show Trim Example</button>]]></html>
  </example>
  <example>
      <desc>Remove the two white spaces at the start and at the end of the string.</desc>
      <code><![CDATA[$.trim("  hello, how are you?  ");]]></code>
      <results><![CDATA["hello, how are you?"]]></results>
  </example>
<category name="Utilities"/>
<category name="Version 1.0"/>
</entry>
            
<entry type='method' name="delay" return="jQuery">
<signature>
	<added>1.4</added>
  <argument name="duration" type="Integer">
    <desc>An integer indicating the number of milliseconds to delay execution of the next item in the queue.</desc>
  </argument>
  <argument name="queueName" optional="true" type="String">
    <desc>A string containing the name of the queue. Defaults to <code>fx</code>, the standard effects queue.</desc>
  </argument>
</signature>
<desc>Set a timer to delay execution of subsequent items in the queue.</desc>
<longdesc><p>Added to jQuery in version 1.4, the <code>.delay()</code> method allows us to delay the execution of functions that follow it in the queue. It can be used with the standard effects queue or with a custom queue. Only subsequent events in a queue are delayed; for example this will <em>not</em> delay the no-arguments forms of <code>.show()</code> or <code>.hide()</code>  which do not use the effects queue.</p>
<p>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The strings <code>'fast'</code> and <code>'slow'</code> can be supplied to indicate durations of 200 and 600 milliseconds, respectively.</p>
<p>Using the standard effects queue, we can, for example, set an 800-millisecond delay between the <code>.slideUp()</code> and <code>.fadeIn()</code> of <code>&lt;div id="foo"&gt;</code>:</p>
<pre>$('#foo').slideUp(300).delay(800).fadeIn(400);</pre>
<p>When this statement is executed, the element slides up for 300 milliseconds and then pauses for 800 milliseconds before fading in for 400 milliseconds.</p>
<blockquote><p><strong>The <code>.delay()</code> method is best for delaying between queued jQuery effects. Because it is limited—it doesn't, for example, offer a way to cancel the delay—<code>.delay()</code> is not a replacement for JavaScript's native <a href="https://developer.mozilla.org/en/DOM/window.setTimeout">setTimeout</a> function, which may be more appropriate for certain use cases.</strong></p></blockquote>
</longdesc>
<example>
  <desc>Animate the hiding and showing of two divs, delaying the first before showing it.</desc>
  <css><![CDATA[
div { width: 60px; height: 60px; float: left; }
.first { background-color: #3f3; }
.second { background-color: #33f;}]]>
</css>
	<code><![CDATA[
    $("button").click(function() {
      $("div.first").slideUp(300).delay(800).fadeIn(400);
      $("div.second").slideUp(300).fadeIn(400);
    });]]>
</code>
  <html><![CDATA[
<p><button>Run</button></p>
<div class="first"></div>
<div class="second"></div>]]>
	</html>
	</example>
<category name="Custom"/>
<category name="Version 1.4"/>
</entry>	
<entry type='selector'  name="attributeContainsWord" return="" >
                <sample>[attribute~="value"]</sample>
                <signature><added>1.0</added>
                <argument name="attribute" type="String">
                    <desc>An attribute name.</desc>
                </argument>
                <argument name="value" type="String">
                    <desc>An attribute value. Quotes are mandatory.</desc>
                </argument></signature>
                <desc>Selects elements that have the specified attribute with a value containing a given word, delimited by spaces.</desc>
                <longdesc><p>This selector matches the test string against each word in the attribute value, where a "word" is defined as a string delimited by whitespace. The selector matches if the test string is exactly equal to any of the words.</p> </longdesc>
                <example>
                    <desc>Finds all inputs with a name attribute that contains the word 'man' and sets the value with some text.</desc>
                    <code><![CDATA[$('input[name~="man"]').val('mr. man is in it!');]]></code>
                    <html><![CDATA[<input name="man-news" />

  <input name="milk man" />
  <input name="letterman2" />
  <input name="newmilk" />]]></html>
                </example>
            <category name="Attribute"/>
<category name="Version 1.0"/>
</entry>
		
 </entries>
 
  </api>

<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Minified using disk
Page Caching using disk (enhanced)
Database Caching 58/75 queries in 0.111 seconds using disk

Served from: api.jquery.com @ 2011-02-02 04:11:30 -->
