<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN" 
"http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>
	<constant name="struts.custom.i18n.resources" value="i18n.global" />
	<constant name="struts.devMode" value="true" />
	<constant name="struts.convention.classes.reload" value="false" />
	
		 <package name="debug-default" abstract="true" extends="struts-default"> 
        <interceptors> 
            <interceptor-stack name="debug-stack"> 
                <interceptor-ref name="exception">
                    <param name="exception.logEnabled">true</param>
      				<param name="exception.logLevel">ERROR</param>
      				<param name="exception.logCategory">com.ycs.exception</param>
      			</interceptor-ref> 
                <interceptor-ref name="alias"/> 
                <interceptor-ref name="servletConfig"/> 
                <interceptor-ref name="i18n"/> 
                <interceptor-ref name="prepare"/> 
                <interceptor-ref name="chain"/> 
                <interceptor-ref name="scopedModelDriven"/> 
                <interceptor-ref name="modelDriven"/> 
                <interceptor-ref name="fileUpload"/> 
                <interceptor-ref name="checkbox"/> 
                <interceptor-ref name="multiselect"/> 
                <interceptor-ref name="staticParams"/> 
                <interceptor-ref name="actionMappingParams"/> 
                <interceptor-ref name="params"> 
                    <param name="excludeParams">dojo\..*,^struts\..*</param> 
                </interceptor-ref> 
                <interceptor-ref name="conversionError"/> 
                <interceptor-ref name="validation"> 
                    <param name="excludeMethods">input,back,cancel,browse</param> 
                </interceptor-ref> 
                <interceptor-ref name="workflow"> 
                    <param name="excludeMethods">input,back,cancel,browse</param> 
                </interceptor-ref> 
                <interceptor-ref name="debugging"/> 
            </interceptor-stack> 
        </interceptors> 
        <default-interceptor-ref name="debug-stack"/>
        
         <global-results>
             <result name="frontendError" type="dispatcher">/pages/globalerror.jsp</result>
             <result name="backendError" type="dispatcher">/pages/globalerror.jsp</result>
             <result name="error" type="dispatcher">/pages/globalerror.jsp</result>
         </global-results>

         <global-exception-mappings>
             <exception-mapping exception="com.ycs.exception.FrontendException" result="frontendError"/>
             <exception-mapping exception="com.ycs.exception.BackendException" result="backendError"/>
             <exception-mapping exception="java.lang.Exception" result="error"/>
         </global-exception-mappings>
          
    </package> 
	<package name="jaxbtest" extends="debug-default" namespace="">
	    <action name="jaxbtest" class="com.ycs.fe.actions.JaxbTestAC"
			method="execute"> 
			<result name="success"  >/pages/screenmap.jsp</result>
			<result name="input">/xslinterceptorinp.jsp</result>
		</action>
	</package>
	<package name="yidefaultPackage" extends="debug-default">
		<result-types>
			<result-type name="customXMLRes" class="actionclass.XMLResult">
			</result-type>
		</result-types>
		
		<interceptors>
			
			<interceptor name="decorator" class="actionclass.DecoratorInterceptor" />
			<interceptor-stack name="myCustomStack">
				<interceptor-ref name="defaultStack" />	
				<interceptor-ref name="decorator" />
			</interceptor-stack>
		</interceptors>
		<!-- global-results>
	        <result name="exception">/pages/globalerror.jsp</result>
	    </global-results-->
	
	    <global-exception-mappings>
	        <exception-mapping exception="java.lang.Exception"
	            result="exception"  />
	    </global-exception-mappings>
	</package>
    
	<package name="ProductSetup" extends="yidefaultPackage" namespace="/html">
		<action name="programsetupview" class="actionclass.ProgramSetup" method="view">
			<interceptor-ref name="myCustomStack" />
			<result name="view1" type="freemarker">
				 ProgramSetup.ftl
			</result>
			<result name="view" type="customXMLRes">
				<param name="resultxml">ProgramSetup.xml</param>
			</result>
			<result name="freemarker" type="freemarker">${resultPage}</result>
			<result name="dispatcher" >${resultPage}</result>
			<result name="velocity" >${resultPage}</result>
			<result name="input">/index.jsp</result>
		</action>
		<action name="programsetupsave" class="actionclass.ProgramSetup" method="save">
			<interceptor-ref name="myCustomStack" />
			<result name="save" type="customXMLRes">
				<param name="resultxml">ProgramSetup.xml</param>
			</result>
			<result name="input">/index.jsp</result>
		</action>
		<action name="programsetupsave" class="actionclass.ProgramSetup" method="save">
			<param name="pageconfigxml">ProgramSetup.xml</param>
			<result name="ajax" type="stream">	
				<param name="resultxml">ProgramSetup.xml</param>
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
			<result name="freemarker" type="freemarker">${resultPage}</result>
			<result name="dispatcher" >${resultPage}</result>
			<result name="velocity" >${resultPage}</result>
			<result name="input">/index.jsp</result>
			<result name="input">/index.jsp</result>
		</action>
	</package>
	
	<package name="binGroup" extends="yidefaultPackage" namespace="/html">
		<action name="binGroupView" class="actionclass.BinGroup" method="view">
			<interceptor-ref name="myCustomStack" />
			<result name="view" type="customXMLRes">
				<param name="resultxml">BinGroup.xml</param>
			</result>
		</action>
	</package>
	
	
	<!--package name="xslt-example" extends="yidefaultPackage">

		<action name="testxsl" class="actionclass.ExampleXSLTAction" method="preview">
			<interceptor-ref name="myCustomStack" />
			<result name="preview" type="customXMLRes">
				<param name="resultxml">testxsl.xml</param>
			</result>
			<result name="input">/index.jsp</result>
		</action>

		<action name="details" class="actionclass.DetailsXSLTAction" method="details">
			<interceptor-ref name="myCustomStack" />
			<result name="resultinput" type="customXMLRes">
				<param name="resultxml">details.xml</param>
			</result>
			<result name="result">/success.jsp
				
			</result>
		</action>
		
		
	</package-->
	
	
	<package name="odl-engine" extends="yidefaultPackage">
		<!--<interceptors>
			<interceptor-stack name="appDefault">
				<interceptor-ref name="defaultStack">
					<param name="exception.logEnabled"> true </param>
					<param name="exception.logLevel"> DEBUG </param>
				</interceptor-ref>
			</interceptor-stack>
		</interceptors>
		<default-interceptor-ref name="appDefault" />-->
		<interceptors>
			<interceptor name="decorator" class="actionclass.DecoratorInterceptor" />
		</interceptors>

		<action name="index">
			<result>
				/index.jsp
            </result>
		</action>

		<action name="engine" class="actionclass.TestactionAC" method="execute">
			<interceptor-ref name="myCustomStack" /> 
			<result name="success">pages/logintpl.jsp</result>
			<result name="returnajax" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		<action name="testftl" class="actionclass.TestactionAC">
			<result name="success" type="freemarker">pages/test-success.ftl</result>
		</action>
		<action name="templatetest" class="actionclass.TestactionAC">
			<result name="success">pages/templatetest.jsp</result>
		</action>
	</package>
	
	<!--package name="old-xslt-example" extends="struts-default">
		<result-types>
			<result-type name="customJSON" class="actionclass.XMLResult">
			</result-type>
		</result-types>
		<interceptors>
			<interceptor name="decorator2" class="actionclass.DecoratorInterceptor" />
			<interceptor-stack name="myCustomStack2">
				<interceptor-ref name="defaultStack" />
				<interceptor-ref name="decorator2" />
			</interceptor-stack>
		</interceptors>
		<action name="testxsl1" class="actionclass.ExampleXSLTAction"
			method="preview">
			<interceptor-ref name="myCustomStack2" />
			<result name="preview" type="xslt">
				<param name="stylesheetLocation">testinterceptor.xsl</param>
			<param name="finalLocation">third.jsp</param>
			</result>
			<result name="input">/xslinterceptorinp.jsp</result>
		</action>
		<action name="testxsl-old" class="actionclass.ExampleXSLTAction"
			method="preview">
			
			<interceptor-ref name="myCustomStack2" />
			<result name="preview" type="customJSON">
				<param name="stylesheetLocation">testinterceptor.xsl</param>
				<param name="finalLocation">third.jsp</param>
			</result>
			<result name="input">/xslinterceptorinp.jsp</result>
		</action>
		<action name="jspmap" class="actionclass.ExampleXSLTAction"
			method="preview">
			
			<interceptor-ref name="myCustomStack2" />
			<result name="preview"  >/pages/loginmap.jsp</result>
			<result name="input">/xslinterceptorinp.jsp</result>
		</action>
	</package-->
	<package name="myactionPack" extends="yidefaultPackage" >
		<action name="myaction" class="actionclass.MyAction">
			<result>/success.jsp</result>
			</action>
		</package>
	
       <package name="card" extends="yidefaultPackage" namespace="/cms">
            <action name="loginPage" class="com.ycs.login.actions.LoginAC">
                <result name="success" type="chain">menuGen</result>
                <result name="error">
                    /cms/login.jsp
                </result>
            </action >
            <action name="menuGen" class="com.ycs.user.accesscontroller.MenuHelper">
                <result name="success" >/cms/home.html
                </result>
            </action>
            
            <action name="locale" class="com.ycs.fe.actions.LocaleAction">
				<result name="success" >/cms/login.jsp</result>
			</action>
			
			<action name="cmsAction" class="actionclass.CardOrder">
                <interceptor-ref name="myCustomStack"/>
                <result name="success" type="customXMLRes">
                    <param name="resultxml">
                    </param>
                </result>
            </action>
           
        </package> 
	
</struts>